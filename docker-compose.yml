services:
  postgres:
    image: pgvector/pgvector:pg15
    container_name: mohe-postgres
    environment:
      POSTGRES_DB: mohe_db
      POSTGRES_USER: mohe_user
      POSTGRES_PASSWORD: mohe_password
    ports:
      - "16239:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - mohe-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U mohe_user -d mohe_db"]
      interval: 30s
      timeout: 10s
      retries: 3

  ollama:
    image: ollama/ollama:latest
    container_name: mohe-ollama
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    networks:
      - mohe-network
    restart: unless-stopped

  app:
    build: .
    container_name: mohe-spring-app
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
      ollama:
        condition: service_started
    environment:
      SPRING_PROFILES_ACTIVE: docker,ollama
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/mohe_db
      SPRING_DATASOURCE_USERNAME: ${DB_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${DB_PASSWORD}
      LLM_OLLAMA_BASE_URL: http://ollama:11434
      LLM_OLLAMA_MODEL: ${LLM_OLLAMA_MODEL:-kanana-instruct}
      JWT_SECRET: ${JWT_SECRET}
      KAKAO_API_KEY: ${KAKAO_API_KEY}
      NAVER_CLIENT_ID: ${NAVER_CLIENT_ID}
      NAVER_CLIENT_SECRET: ${NAVER_CLIENT_SECRET}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      GOOGLE_PLACES_API_KEY: ${GOOGLE_PLACES_API_KEY}
      GEMINI_API_KEY: ${GEMINI_API_KEY}
    env_file:
      - .env
    networks:
      - mohe-network
    restart: unless-stopped
    volumes:
      - /Users/andrewlim/Desktop/Developer/Mohe/images:/images

volumes:
  postgres_data:
  ollama_data:

networks:
  mohe-network:
    driver: bridge
